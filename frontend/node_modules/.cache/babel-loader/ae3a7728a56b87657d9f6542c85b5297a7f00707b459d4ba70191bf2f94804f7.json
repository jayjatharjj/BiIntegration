{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'App',\n  setup() {\n    const form = ref({\n      sourceType: 'clickhouse',\n      query: '',\n      tableName: '',\n      file: null\n    });\n    const handleFileChange = file => {\n      form.value.file = file.raw;\n    };\n    const handleSubmit = async () => {\n      try {\n        if (form.value.sourceType === 'clickhouse') {\n          const response = await axios.post('http://localhost:8080/api/data-flow/clickhouse-to-file', {\n            query: form.value.query\n          });\n          ElMessage.success(response.data);\n        } else {\n          const formData = new FormData();\n          formData.append('file', form.value.file);\n          formData.append('tableName', form.value.tableName);\n          const response = await axios.post('http://localhost:8080/api/data-flow/file-to-clickhouse', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          ElMessage.success(response.data);\n        }\n      } catch (error) {\n        ElMessage.error(error.response?.data || 'An error occurred');\n      }\n    };\n    return {\n      form,\n      handleFileChange,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","ElMessage","name","setup","form","sourceType","query","tableName","file","handleFileChange","value","raw","handleSubmit","response","post","success","data","formData","FormData","append","headers","error"],"sources":["/home/jayjathar/BiIntegration/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-container>\n      <el-header>\n        <h1>Data Integration Platform</h1>\n      </el-header>\n      \n      <el-main>\n        <el-card class=\"data-flow-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>Data Flow Configuration</span>\n            </div>\n          </template>\n          \n          <el-form :model=\"form\" label-width=\"120px\">\n            <el-form-item label=\"Source Type\">\n              <el-radio-group v-model=\"form.sourceType\">\n                <el-radio label=\"clickhouse\">ClickHouse</el-radio>\n                <el-radio label=\"file\">Flat File</el-radio>\n              </el-radio-group>\n            </el-form-item>\n\n            <template v-if=\"form.sourceType === 'clickhouse'\">\n              <el-form-item label=\"Query\">\n                <el-input\n                  type=\"textarea\"\n                  v-model=\"form.query\"\n                  :rows=\"4\"\n                  placeholder=\"Enter your SQL query\"\n                ></el-input>\n              </el-form-item>\n            </template>\n\n            <template v-else>\n              <el-form-item label=\"File\">\n                <el-upload\n                  class=\"upload-demo\"\n                  action=\"#\"\n                  :auto-upload=\"false\"\n                  :on-change=\"handleFileChange\"\n                >\n                  <el-button type=\"primary\">Select File</el-button>\n                </el-upload>\n              </el-form-item>\n              <el-form-item label=\"Table Name\">\n                <el-input v-model=\"form.tableName\" placeholder=\"Enter target table name\"></el-input>\n              </el-form-item>\n            </template>\n\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"handleSubmit\">Submit</el-button>\n            </el-form-item>\n          </el-form>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'App',\n  setup() {\n    const form = ref({\n      sourceType: 'clickhouse',\n      query: '',\n      tableName: '',\n      file: null\n    })\n\n    const handleFileChange = (file) => {\n      form.value.file = file.raw\n    }\n\n    const handleSubmit = async () => {\n      try {\n        if (form.value.sourceType === 'clickhouse') {\n          const response = await axios.post('http://localhost:8080/api/data-flow/clickhouse-to-file', {\n            query: form.value.query\n          })\n          ElMessage.success(response.data)\n        } else {\n          const formData = new FormData()\n          formData.append('file', form.value.file)\n          formData.append('tableName', form.value.tableName)\n          \n          const response = await axios.post('http://localhost:8080/api/data-flow/file-to-clickhouse', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          })\n          ElMessage.success(response.data)\n        }\n      } catch (error) {\n        ElMessage.error(error.response?.data || 'An error occurred')\n      }\n    }\n\n    return {\n      form,\n      handleFileChange,\n      handleSubmit\n    }\n  }\n}\n</script>\n\n<style>\n.app-container {\n  padding: 20px;\n}\n\n.el-header {\n  background-color: #409EFF;\n  color: white;\n  text-align: center;\n  line-height: 60px;\n}\n\n.data-flow-card {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style> "],"mappings":"AA6DA,SAASA,GAAE,QAAS,KAAI;AACxB,OAAOC,KAAI,MAAO,OAAM;AACxB,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIL,GAAG,CAAC;MACfM,UAAU,EAAE,YAAY;MACxBC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE;IACR,CAAC;IAED,MAAMC,gBAAe,GAAKD,IAAI,IAAK;MACjCJ,IAAI,CAACM,KAAK,CAACF,IAAG,GAAIA,IAAI,CAACG,GAAE;IAC3B;IAEA,MAAMC,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,IAAIR,IAAI,CAACM,KAAK,CAACL,UAAS,KAAM,YAAY,EAAE;UAC1C,MAAMQ,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,wDAAwD,EAAE;YAC1FR,KAAK,EAAEF,IAAI,CAACM,KAAK,CAACJ;UACpB,CAAC;UACDL,SAAS,CAACc,OAAO,CAACF,QAAQ,CAACG,IAAI;QACjC,OAAO;UACL,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC;UAC9BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEf,IAAI,CAACM,KAAK,CAACF,IAAI;UACvCS,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEf,IAAI,CAACM,KAAK,CAACH,SAAS;UAEjD,MAAMM,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,wDAAwD,EAAEG,QAAQ,EAAE;YACpGG,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CAAC;UACDnB,SAAS,CAACc,OAAO,CAACF,QAAQ,CAACG,IAAI;QACjC;MACF,EAAE,OAAOK,KAAK,EAAE;QACdpB,SAAS,CAACoB,KAAK,CAACA,KAAK,CAACR,QAAQ,EAAEG,IAAG,IAAK,mBAAmB;MAC7D;IACF;IAEA,OAAO;MACLZ,IAAI;MACJK,gBAAgB;MAChBG;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}