{"ast":null,"code":"import _regeneratorRuntime from \"/home/jayjathar/BiIntegration/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/jayjathar/BiIntegration/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'App',\n  setup: function setup() {\n    var form = ref({\n      sourceType: 'clickhouse',\n      query: '',\n      tableName: '',\n      file: null\n    });\n    var handleFileChange = function handleFileChange(file) {\n      form.value.file = file.raw;\n    };\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, formData, _response, _error$response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              if (!(form.value.sourceType === 'clickhouse')) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 4;\n              return axios.post('http://localhost:8080/api/data-flow/clickhouse-to-file', {\n                query: form.value.query\n              });\n            case 4:\n              response = _context.sent;\n              ElMessage.success(response.data);\n              _context.next = 15;\n              break;\n            case 8:\n              formData = new FormData();\n              formData.append('file', form.value.file);\n              formData.append('tableName', form.value.tableName);\n              _context.next = 13;\n              return axios.post('http://localhost:8080/api/data-flow/file-to-clickhouse', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n            case 13:\n              _response = _context.sent;\n              ElMessage.success(_response.data);\n            case 15:\n              _context.next = 20;\n              break;\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](0);\n              ElMessage.error(((_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'An error occurred');\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 17]]);\n      }));\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      form: form,\n      handleFileChange: handleFileChange,\n      handleSubmit: handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","ElMessage","name","setup","form","sourceType","query","tableName","file","handleFileChange","value","raw","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","formData","_response","_error$response","wrap","_callee$","_context","prev","next","post","sent","success","data","FormData","append","headers","t0","error","stop","apply","arguments"],"sources":["/home/jayjathar/BiIntegration/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-container>\n      <el-header>\n        <h1>Data Integration Platform</h1>\n      </el-header>\n      \n      <el-main>\n        <el-card class=\"data-flow-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>Data Flow Configuration</span>\n            </div>\n          </template>\n          \n          <el-form :model=\"form\" label-width=\"120px\">\n            <el-form-item label=\"Source Type\">\n              <el-radio-group v-model=\"form.sourceType\">\n                <el-radio label=\"clickhouse\">ClickHouse</el-radio>\n                <el-radio label=\"file\">Flat File</el-radio>\n              </el-radio-group>\n            </el-form-item>\n\n            <template v-if=\"form.sourceType === 'clickhouse'\">\n              <el-form-item label=\"Query\">\n                <el-input\n                  type=\"textarea\"\n                  v-model=\"form.query\"\n                  :rows=\"4\"\n                  placeholder=\"Enter your SQL query\"\n                ></el-input>\n              </el-form-item>\n            </template>\n\n            <template v-else>\n              <el-form-item label=\"File\">\n                <el-upload\n                  class=\"upload-demo\"\n                  action=\"#\"\n                  :auto-upload=\"false\"\n                  :on-change=\"handleFileChange\"\n                >\n                  <el-button type=\"primary\">Select File</el-button>\n                </el-upload>\n              </el-form-item>\n              <el-form-item label=\"Table Name\">\n                <el-input v-model=\"form.tableName\" placeholder=\"Enter target table name\"></el-input>\n              </el-form-item>\n            </template>\n\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"handleSubmit\">Submit</el-button>\n            </el-form-item>\n          </el-form>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'App',\n  setup() {\n    const form = ref({\n      sourceType: 'clickhouse',\n      query: '',\n      tableName: '',\n      file: null\n    })\n\n    const handleFileChange = (file) => {\n      form.value.file = file.raw\n    }\n\n    const handleSubmit = async () => {\n      try {\n        if (form.value.sourceType === 'clickhouse') {\n          const response = await axios.post('http://localhost:8080/api/data-flow/clickhouse-to-file', {\n            query: form.value.query\n          })\n          ElMessage.success(response.data)\n        } else {\n          const formData = new FormData()\n          formData.append('file', form.value.file)\n          formData.append('tableName', form.value.tableName)\n          \n          const response = await axios.post('http://localhost:8080/api/data-flow/file-to-clickhouse', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          })\n          ElMessage.success(response.data)\n        }\n      } catch (error) {\n        ElMessage.error(error.response?.data || 'An error occurred')\n      }\n    }\n\n    return {\n      form,\n      handleFileChange,\n      handleSubmit\n    }\n  }\n}\n</script>\n\n<style>\n.app-container {\n  padding: 20px;\n}\n\n.el-header {\n  background-color: #409EFF;\n  color: white;\n  text-align: center;\n  line-height: 60px;\n}\n\n.data-flow-card {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style> "],"mappings":";;AA6DA,SAASA,GAAE,QAAS,KAAI;AACxB,OAAOC,KAAI,MAAO,OAAM;AACxB,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,IAAG,GAAIL,GAAG,CAAC;MACfM,UAAU,EAAE,YAAY;MACxBC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE;IACR,CAAC;IAED,IAAMC,gBAAe,GAAI,SAAnBA,gBAAeA,CAAKD,IAAI,EAAK;MACjCJ,IAAI,CAACM,KAAK,CAACF,IAAG,GAAIA,IAAI,CAACG,GAAE;IAC3B;IAEA,IAAMC,YAAW;MAAA,IAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAI,SAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,eAAA;QAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAA,MAEbrB,IAAI,CAACM,KAAK,CAACL,UAAS,KAAM,YAAY;gBAAAmB,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACjB1B,KAAK,CAAC2B,IAAI,CAAC,wDAAwD,EAAE;gBAC1FrB,KAAK,EAAEF,IAAI,CAACM,KAAK,CAACJ;cACpB,CAAC;YAAA;cAFKY,QAAO,GAAAM,QAAA,CAAAI,IAAA;cAGb3B,SAAS,CAAC4B,OAAO,CAACX,QAAQ,CAACY,IAAI;cAAAN,QAAA,CAAAE,IAAA;cAAA;YAAA;cAEzBP,QAAO,GAAI,IAAIY,QAAQ,CAAC;cAC9BZ,QAAQ,CAACa,MAAM,CAAC,MAAM,EAAE5B,IAAI,CAACM,KAAK,CAACF,IAAI;cACvCW,QAAQ,CAACa,MAAM,CAAC,WAAW,EAAE5B,IAAI,CAACM,KAAK,CAACH,SAAS;cAAAiB,QAAA,CAAAE,IAAA;cAAA,OAE1B1B,KAAK,CAAC2B,IAAI,CAAC,wDAAwD,EAAER,QAAQ,EAAE;gBACpGc,OAAO,EAAE;kBACP,cAAc,EAAE;gBAClB;cACF,CAAC;YAAA;cAJKf,SAAO,GAAAM,QAAA,CAAAI,IAAA;cAKb3B,SAAS,CAAC4B,OAAO,CAACX,SAAQ,CAACY,IAAI;YAAA;cAAAN,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;cAGjCvB,SAAS,CAACkC,KAAK,CAAC,EAAAd,eAAA,GAAAG,QAAA,CAAAU,EAAA,CAAMhB,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBS,IAAG,KAAK,mBAAmB;YAAA;YAAA;cAAA,OAAAN,QAAA,CAAAY,IAAA;UAAA;QAAA,GAAAnB,OAAA;MAAA,CAE/D;MAAA,gBAtBML,YAAWA,CAAA;QAAA,OAAAC,IAAA,CAAAwB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAsBjB;IAEA,OAAO;MACLlC,IAAI,EAAJA,IAAI;MACJK,gBAAgB,EAAhBA,gBAAgB;MAChBG,YAAW,EAAXA;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}