{"ast":null,"code":"import _regeneratorRuntime from \"/home/jayjathar/BiIntegration/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/jayjathar/BiIntegration/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, computed } from 'vue';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport { DataLine, Document, Upload, UploadFilled, Grid, Connection, Port, DataBase, User, Key, Separator, Quote, View, Refresh, CircleCheck } from '@element-plus/icons-vue';\nexport default {\n  name: 'App',\n  components: {\n    DataLine: DataLine,\n    Document: Document,\n    Upload: Upload,\n    UploadFilled: UploadFilled,\n    Grid: Grid,\n    Connection: Connection,\n    Port: Port,\n    DataBase: DataBase,\n    User: User,\n    Key: Key,\n    Separator: Separator,\n    Quote: Quote,\n    View: View,\n    Refresh: Refresh,\n    CircleCheck: CircleCheck\n  },\n  setup: function setup() {\n    var form = ref({\n      sourceType: 'clickhouse',\n      connectionType: 'http',\n      host: '',\n      port: '',\n      database: '',\n      user: '',\n      jwtToken: '',\n      query: '',\n      tableName: '',\n      file: null,\n      fileFormat: 'csv',\n      delimiter: ',',\n      quoteChar: '\"',\n      hasHeader: true,\n      selectedTable: '',\n      selectedColumns: []\n    });\n    var activeStep = ref(0);\n    var loading = ref(false);\n    var testingConnection = ref(false);\n    var showSuccessDialog = ref(false);\n    var showPreviewDialog = ref(false);\n    var previewLoading = ref(false);\n    var previewData = ref([]);\n    var previewHeaders = ref([]);\n    var tables = ref([]);\n    var columns = ref([]);\n    var loadingTables = ref(false);\n    var showProgressDialog = ref(false);\n    var transferProgress = ref(0);\n    var transferStatus = ref('');\n    var transferStatusText = ref('');\n    var processedRecords = ref(0);\n    var errorMessage = ref('');\n    var transferComplete = ref(false);\n    var isConnectionValid = computed(function () {\n      return form.value.host && form.value.port && form.value.database && form.value.user;\n    });\n    var getFileAcceptType = computed(function () {\n      switch (form.value.fileFormat) {\n        case 'csv':\n          return '.csv';\n        case 'tsv':\n          return '.tsv';\n        case 'json':\n          return '.json';\n        default:\n          return '*';\n      }\n    });\n    var getFileTypeDescription = computed(function () {\n      switch (form.value.fileFormat) {\n        case 'csv':\n          return 'CSV files up to 10MB';\n        case 'tsv':\n          return 'TSV files up to 10MB';\n        case 'json':\n          return 'JSON files up to 10MB';\n        default:\n          return 'Files up to 10MB';\n      }\n    });\n    var handleSourceChange = function handleSourceChange() {\n      activeStep.value = 1;\n    };\n    var handleFileChange = function handleFileChange(file) {\n      form.value.file = file.raw;\n      activeStep.value = 1;\n    };\n    var testConnection = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$axios$post, data, _error$response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              testingConnection.value = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.post('/api/data-flow/test-connection', {\n                connectionType: form.value.connectionType,\n                host: form.value.host,\n                port: form.value.port,\n                database: form.value.database,\n                user: form.value.user,\n                jwtToken: form.value.jwtToken\n              });\n            case 4:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              ElMessage.success(data.message || 'Connection successful!');\n              _context.next = 12;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              ElMessage.error(((_error$response = _context.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.message) || 'Connection failed');\n            case 12:\n              _context.prev = 12;\n              testingConnection.value = false;\n              return _context.finish(12);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 9, 12, 15]]);\n      }));\n      return function testConnection() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var fetchTables = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$axios$post2, data, _error$response2;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              loadingTables.value = true;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.post('/api/data-flow/tables', {\n                connectionType: form.value.connectionType,\n                host: form.value.host,\n                port: form.value.port,\n                database: form.value.database,\n                user: form.value.user,\n                jwtToken: form.value.jwtToken\n              });\n            case 4:\n              _yield$axios$post2 = _context2.sent;\n              data = _yield$axios$post2.data;\n              tables.value = data.tables;\n              _context2.next = 12;\n              break;\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              ElMessage.error(((_error$response2 = _context2.t0.response) === null || _error$response2 === void 0 || (_error$response2 = _error$response2.data) === null || _error$response2 === void 0 ? void 0 : _error$response2.message) || 'Failed to fetch tables');\n            case 12:\n              _context2.prev = 12;\n              loadingTables.value = false;\n              return _context2.finish(12);\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 9, 12, 15]]);\n      }));\n      return function fetchTables() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var handleTableSelect = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(tableName) {\n        var _yield$axios$post3, data, _error$response3;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (tableName) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 2:\n              _context3.prev = 2;\n              _context3.next = 5;\n              return axios.post('/api/data-flow/columns', {\n                connectionType: form.value.connectionType,\n                host: form.value.host,\n                port: form.value.port,\n                database: form.value.database,\n                user: form.value.user,\n                jwtToken: form.value.jwtToken,\n                table: tableName\n              });\n            case 5:\n              _yield$axios$post3 = _context3.sent;\n              data = _yield$axios$post3.data;\n              columns.value = data.columns;\n              form.value.selectedColumns = columns.value.map(function (col) {\n                return col.name;\n              });\n              _context3.next = 14;\n              break;\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](2);\n              ElMessage.error(((_error$response3 = _context3.t0.response) === null || _error$response3 === void 0 || (_error$response3 = _error$response3.data) === null || _error$response3 === void 0 ? void 0 : _error$response3.message) || 'Failed to fetch columns');\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[2, 11]]);\n      }));\n      return function handleTableSelect(_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var selectAllColumns = function selectAllColumns(select) {\n      if (form.value.sourceType === 'clickhouse') {\n        form.value.selectedColumns = select ? columns.value.map(function (col) {\n          return col.name;\n        }) : [];\n      } else {\n        form.value.selectedColumns = select ? previewHeaders.value : [];\n      }\n    };\n    var previewFile = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var formData, _yield$axios$post4, data, _error$response4;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              previewLoading.value = true;\n              _context4.prev = 1;\n              formData = new FormData();\n              formData.append('file', form.value.file);\n              formData.append('format', form.value.fileFormat);\n              formData.append('delimiter', form.value.delimiter);\n              formData.append('quoteChar', form.value.quoteChar);\n              formData.append('hasHeader', form.value.hasHeader);\n              _context4.next = 10;\n              return axios.post('/api/data-flow/preview-file', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n            case 10:\n              _yield$axios$post4 = _context4.sent;\n              data = _yield$axios$post4.data;\n              previewData.value = data.rows;\n              previewHeaders.value = data.headers;\n              form.value.selectedColumns = data.headers;\n              showPreviewDialog.value = true;\n              _context4.next = 21;\n              break;\n            case 18:\n              _context4.prev = 18;\n              _context4.t0 = _context4[\"catch\"](1);\n              ElMessage.error(((_error$response4 = _context4.t0.response) === null || _error$response4 === void 0 || (_error$response4 = _error$response4.data) === null || _error$response4 === void 0 ? void 0 : _error$response4.message) || 'Failed to preview file');\n            case 21:\n              _context4.prev = 21;\n              previewLoading.value = false;\n              return _context4.finish(21);\n            case 24:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 18, 21, 24]]);\n      }));\n      return function previewFile() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _error$response$data;\n        var response, formData, _response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              loading.value = true;\n              showProgressDialog.value = true;\n              transferProgress.value = 0;\n              transferStatus.value = '';\n              transferStatusText.value = 'Initializing transfer...';\n              processedRecords.value = 0;\n              errorMessage.value = '';\n              transferComplete.value = false;\n              _context5.prev = 8;\n              if (!(form.value.sourceType === 'clickhouse')) {\n                _context5.next = 21;\n                break;\n              }\n              _context5.next = 12;\n              return axios.post('/api/data-flow/clickhouse-to-file', {\n                connectionType: form.value.connectionType,\n                host: form.value.host,\n                port: form.value.port,\n                database: form.value.database,\n                user: form.value.user,\n                jwtToken: form.value.jwtToken,\n                query: form.value.query,\n                selectedColumns: form.value.selectedColumns\n              }, {\n                onUploadProgress: function onUploadProgress(progressEvent) {\n                  var progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n                  transferProgress.value = progress;\n                  transferStatusText.value = \"Transferring data... (\".concat(progress, \"%)\");\n                }\n              });\n            case 12:\n              response = _context5.sent;\n              processedRecords.value = response.data.recordsProcessed;\n              transferProgress.value = 100;\n              transferStatus.value = 'success';\n              transferStatusText.value = 'Transfer completed successfully';\n              transferComplete.value = true;\n              showSuccessDialog.value = true;\n              _context5.next = 38;\n              break;\n            case 21:\n              formData = new FormData();\n              formData.append('file', form.value.file);\n              formData.append('tableName', form.value.tableName);\n              formData.append('format', form.value.fileFormat);\n              formData.append('delimiter', form.value.delimiter);\n              formData.append('quoteChar', form.value.quoteChar);\n              formData.append('hasHeader', form.value.hasHeader);\n              formData.append('selectedColumns', JSON.stringify(form.value.selectedColumns));\n              _context5.next = 31;\n              return axios.post('/api/data-flow/file-to-clickhouse', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                },\n                onUploadProgress: function onUploadProgress(progressEvent) {\n                  var progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n                  transferProgress.value = progress;\n                  transferStatusText.value = \"Uploading file... (\".concat(progress, \"%)\");\n                }\n              });\n            case 31:\n              _response = _context5.sent;\n              processedRecords.value = _response.data.recordsProcessed;\n              transferProgress.value = 100;\n              transferStatus.value = 'success';\n              transferStatusText.value = 'Transfer completed successfully';\n              transferComplete.value = true;\n              showSuccessDialog.value = true;\n            case 38:\n              _context5.next = 63;\n              break;\n            case 40:\n              _context5.prev = 40;\n              _context5.t0 = _context5[\"catch\"](8);\n              transferProgress.value = 100;\n              transferStatus.value = 'exception';\n              transferComplete.value = true;\n              if (!_context5.t0.response) {\n                _context5.next = 60;\n                break;\n              }\n              _context5.t1 = _context5.t0.response.status;\n              _context5.next = _context5.t1 === 401 ? 49 : _context5.t1 === 403 ? 51 : _context5.t1 === 404 ? 53 : _context5.t1 === 500 ? 55 : 57;\n              break;\n            case 49:\n              errorMessage.value = 'Authentication failed. Please check your credentials.';\n              return _context5.abrupt(\"break\", 58);\n            case 51:\n              errorMessage.value = 'Access denied. Please check your permissions.';\n              return _context5.abrupt(\"break\", 58);\n            case 53:\n              errorMessage.value = 'Resource not found. Please check your configuration.';\n              return _context5.abrupt(\"break\", 58);\n            case 55:\n              errorMessage.value = 'Server error. Please try again later.';\n              return _context5.abrupt(\"break\", 58);\n            case 57:\n              errorMessage.value = ((_error$response$data = _context5.t0.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred during transfer';\n            case 58:\n              _context5.next = 61;\n              break;\n            case 60:\n              if (_context5.t0.request) {\n                errorMessage.value = 'Network error. Please check your connection.';\n              } else {\n                errorMessage.value = _context5.t0.message || 'An unexpected error occurred';\n              }\n            case 61:\n              transferStatusText.value = 'Transfer failed';\n              ElMessage.error(errorMessage.value);\n            case 63:\n              _context5.prev = 63;\n              loading.value = false;\n              return _context5.finish(63);\n            case 66:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[8, 40, 63, 66]]);\n      }));\n      return function handleSubmit() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    return {\n      form: form,\n      activeStep: activeStep,\n      loading: loading,\n      testingConnection: testingConnection,\n      showSuccessDialog: showSuccessDialog,\n      showPreviewDialog: showPreviewDialog,\n      previewLoading: previewLoading,\n      previewData: previewData,\n      previewHeaders: previewHeaders,\n      isConnectionValid: isConnectionValid,\n      getFileAcceptType: getFileAcceptType,\n      getFileTypeDescription: getFileTypeDescription,\n      handleSourceChange: handleSourceChange,\n      handleFileChange: handleFileChange,\n      testConnection: testConnection,\n      previewFile: previewFile,\n      handleSubmit: handleSubmit,\n      tables: tables,\n      columns: columns,\n      loadingTables: loadingTables,\n      fetchTables: fetchTables,\n      handleTableSelect: handleTableSelect,\n      selectAllColumns: selectAllColumns,\n      showProgressDialog: showProgressDialog,\n      transferProgress: transferProgress,\n      transferStatus: transferStatus,\n      transferStatusText: transferStatusText,\n      processedRecords: processedRecords,\n      errorMessage: errorMessage,\n      transferComplete: transferComplete\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","axios","ElMessage","DataLine","Document","Upload","UploadFilled","Grid","Connection","Port","DataBase","User","Key","Separator","Quote","View","Refresh","CircleCheck","name","components","setup","form","sourceType","connectionType","host","port","database","user","jwtToken","query","tableName","file","fileFormat","delimiter","quoteChar","hasHeader","selectedTable","selectedColumns","activeStep","loading","testingConnection","showSuccessDialog","showPreviewDialog","previewLoading","previewData","previewHeaders","tables","columns","loadingTables","showProgressDialog","transferProgress","transferStatus","transferStatusText","processedRecords","errorMessage","transferComplete","isConnectionValid","value","getFileAcceptType","getFileTypeDescription","handleSourceChange","handleFileChange","raw","testConnection","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$post","data","_error$response","wrap","_callee$","_context","prev","next","post","sent","success","message","t0","error","response","finish","stop","apply","arguments","fetchTables","_ref2","_callee2","_yield$axios$post2","_error$response2","_callee2$","_context2","handleTableSelect","_ref3","_callee3","_yield$axios$post3","_error$response3","_callee3$","_context3","abrupt","table","map","col","_x","selectAllColumns","select","previewFile","_ref4","_callee4","formData","_yield$axios$post4","_error$response4","_callee4$","_context4","FormData","append","headers","rows","handleSubmit","_ref5","_callee5","_error$response$data","_response","_callee5$","_context5","onUploadProgress","progressEvent","progress","Math","round","loaded","total","concat","recordsProcessed","JSON","stringify","t1","status","request"],"sources":["/home/jayjathar/BiIntegration/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-container>\n      <el-header class=\"header p-5 min-w-10\">\n        <div class=\"header-content\">\n          <h1>Data Integration Platform</h1>\n          <p class=\"subtitle\">Seamlessly transfer data between ClickHouse and Flat Files</p>\n        </div>\n      </el-header>\n      \n      <el-main class=\"main-content\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"24\">\n            <el-card class=\"data-flow-card\" shadow=\"hover\">\n              <template #header>\n                <div class=\"card-header\">\n                  <span class=\"header-title\">Data Flow Configuration</span>\n                  <el-tag type=\"info\" effect=\"dark\">v1.0</el-tag>\n                </div>\n              </template>\n              \n              <el-steps :active=\"activeStep\" finish-status=\"success\" class=\"steps\">\n                <el-step title=\"Select Source\" description=\"Choose your data source\"></el-step>\n                <el-step title=\"Configure\" description=\"Set up the transfer\"></el-step>\n                <el-step title=\"Execute\" description=\"Run the transfer\"></el-step>\n              </el-steps>\n\n              <el-form :model=\"form\" label-width=\"120px\" class=\"data-form\">\n                <!-- Source Selection Section -->\n                <el-divider content-position=\"center\">\n                  <el-tag type=\"primary\" size=\"large\">Source Selection</el-tag>\n                </el-divider>\n\n                <el-form-item label=\"Source Type\" class=\"source-type\">\n                  <el-radio-group v-model=\"form.sourceType\" @change=\"handleSourceChange\">\n                    <el-radio-button label=\"clickhouse\">\n                      <el-icon><DataLine /></el-icon>\n                      ClickHouse\n                    </el-radio-button>\n                    <el-radio-button label=\"file\">\n                      <el-icon><Document /></el-icon>\n                      Flat File\n                    </el-radio-button>\n                  </el-radio-group>\n                </el-form-item>\n\n                <!-- Connection Configuration Section -->\n                <template v-if=\"form.sourceType === 'clickhouse'\">\n                  <el-divider content-position=\"center\">\n                    <el-tag type=\"primary\" size=\"large\">Connection Configuration</el-tag>\n                  </el-divider>\n\n                  <el-form-item label=\"Connection Type\" class=\"connection-type\">\n                    <el-radio-group v-model=\"form.connectionType\">\n                      <el-radio-button label=\"http\">HTTP</el-radio-button>\n                      <el-radio-button label=\"https\">HTTPS</el-radio-button>\n                    </el-radio-group>\n                  </el-form-item>\n\n                  <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                      <el-form-item label=\"Host\" required>\n                        <el-input v-model=\"form.host\" placeholder=\"e.g., localhost\">\n                          <template #prefix>\n                            <el-icon><Connection /></el-icon>\n                          </template>\n                        </el-input>\n                      </el-form-item>\n                    </el-col>\n                    <el-col :span=\"12\">\n                      <el-form-item label=\"Port\" required>\n                        <el-input v-model=\"form.port\" placeholder=\"e.g., 8123\">\n                          <template #prefix>\n                            <el-icon><Port /></el-icon>\n                          </template>\n                        </el-input>\n                      </el-form-item>\n                    </el-col>\n                  </el-row>\n\n                  <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                      <el-form-item label=\"Database\" required>\n                        <el-input v-model=\"form.database\" placeholder=\"e.g., default\">\n                          <template #prefix>\n                            <el-icon><DataBase /></el-icon>\n                          </template>\n                        </el-input>\n                      </el-form-item>\n                    </el-col>\n                    <el-col :span=\"12\">\n                      <el-form-item label=\"User\" required>\n                        <el-input v-model=\"form.user\" placeholder=\"e.g., default\">\n                          <template #prefix>\n                            <el-icon><User /></el-icon>\n                          </template>\n                        </el-input>\n                      </el-form-item>\n                    </el-col>\n                  </el-row>\n\n                  <el-form-item label=\"JWT Token\">\n                    <el-input\n                      v-model=\"form.jwtToken\"\n                      type=\"password\"\n                      placeholder=\"Enter JWT token if required\"\n                      show-password\n                    >\n                      <template #prefix>\n                        <el-icon><Key /></el-icon>\n                      </template>\n                    </el-input>\n                  </el-form-item>\n\n                  <el-form-item>\n                    <el-button type=\"primary\" @click=\"testConnection\" :loading=\"testingConnection\">\n                      <el-icon><Connection /></el-icon>\n                      Test Connection\n                    </el-button>\n                    <el-button type=\"success\" @click=\"fetchTables\" :loading=\"loadingTables\" :disabled=\"!isConnectionValid\">\n                      <el-icon><Refresh /></el-icon>\n                      Load Tables\n                    </el-button>\n                  </el-form-item>\n\n                  <!-- Schema Discovery Section -->\n                  <el-divider content-position=\"center\" v-if=\"tables.length > 0\">\n                    <el-tag type=\"primary\" size=\"large\">Schema Discovery</el-tag>\n                  </el-divider>\n\n                  <el-form-item label=\"Tables\" class=\"tables-list\" v-if=\"tables.length > 0\">\n                    <el-select\n                      v-model=\"form.selectedTable\"\n                      placeholder=\"Select a table\"\n                      @change=\"handleTableSelect\"\n                      :loading=\"loadingTables\"\n                      style=\"width: 100%\"\n                    >\n                      <el-option\n                        v-for=\"table in tables\"\n                        :key=\"table.name\"\n                        :label=\"table.name\"\n                        :value=\"table.name\"\n                      />\n                    </el-select>\n                  </el-form-item>\n\n                  <el-form-item label=\"Columns\" v-if=\"columns.length > 0\">\n                    <el-card class=\"columns-card\">\n                      <template #header>\n                        <div class=\"columns-header\">\n                          <span>Available Columns</span>\n                          <el-button-group>\n                            <el-button @click=\"selectAllColumns(true)\" size=\"small\">\n                              Select All\n                            </el-button>\n                            <el-button @click=\"selectAllColumns(false)\" size=\"small\">\n                              Deselect All\n                            </el-button>\n                          </el-button-group>\n                        </div>\n                      </template>\n                      <el-checkbox-group v-model=\"form.selectedColumns\">\n                        <el-row :gutter=\"20\">\n                          <el-col :span=\"8\" v-for=\"column in columns\" :key=\"column.name\">\n                            <el-checkbox :label=\"column.name\">\n                              {{ column.name }}\n                              <el-tag size=\"small\" type=\"info\" class=\"column-type\">\n                                {{ column.type }}\n                              </el-tag>\n                            </el-checkbox>\n                          </el-col>\n                        </el-row>\n                      </el-checkbox-group>\n                    </el-card>\n                  </el-form-item>\n\n                  <el-form-item label=\"Query\" class=\"query-input\">\n                    <el-input\n                      type=\"textarea\"\n                      v-model=\"form.query\"\n                      :rows=\"6\"\n                      placeholder=\"Enter your SQL query\"\n                      resize=\"none\"\n                    ></el-input>\n                    <div class=\"query-tips\">\n                      <el-tag size=\"small\" type=\"info\">Tip: Use SELECT * FROM table_name to export all data</el-tag>\n                    </div>\n                  </el-form-item>\n                </template>\n\n                <!-- Flat File Configuration Section -->\n                <template v-else>\n                  <el-divider content-position=\"center\">\n                    <el-tag type=\"primary\" size=\"large\">File Configuration</el-tag>\n                  </el-divider>\n\n                  <el-form-item label=\"File Format\" class=\"file-format\">\n                    <el-radio-group v-model=\"form.fileFormat\">\n                      <el-radio-button label=\"csv\">CSV</el-radio-button>\n                      <el-radio-button label=\"tsv\">TSV</el-radio-button>\n                      <el-radio-button label=\"json\">JSON</el-radio-button>\n                    </el-radio-group>\n                  </el-form-item>\n\n                  <template v-if=\"form.fileFormat !== 'json'\">\n                    <el-row :gutter=\"20\">\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"Delimiter\" required>\n                          <el-input v-model=\"form.delimiter\" placeholder=\"e.g., , or \\t\">\n                            <template #prefix>\n                              <el-icon><Separator /></el-icon>\n                            </template>\n                          </el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"Quote Character\">\n                          <el-input v-model=\"form.quoteChar\" placeholder=\"e.g., &quot;\">\n                            <template #prefix>\n                              <el-icon><Quote /></el-icon>\n                            </template>\n                          </el-input>\n                        </el-form-item>\n                      </el-col>\n                    </el-row>\n\n                    <el-form-item label=\"Has Header\" class=\"header-row\">\n                      <el-switch\n                        v-model=\"form.hasHeader\"\n                        active-text=\"Yes\"\n                        inactive-text=\"No\"\n                      />\n                    </el-form-item>\n                  </template>\n\n                  <el-form-item label=\"File\" class=\"file-upload\">\n                    <el-upload\n                      class=\"upload-demo\"\n                      drag\n                      action=\"#\"\n                      :auto-upload=\"false\"\n                      :on-change=\"handleFileChange\"\n                      :limit=\"1\"\n                      :accept=\"getFileAcceptType\"\n                    >\n                      <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n                      <div class=\"el-upload__text\">\n                        Drop file here or <em>click to upload</em>\n                      </div>\n                      <template #tip>\n                        <div class=\"el-upload__tip\">\n                          {{ getFileTypeDescription }}\n                        </div>\n                      </template>\n                    </el-upload>\n                  </el-form-item>\n\n                  <el-form-item label=\"Table Name\" class=\"table-name\">\n                    <el-input \n                      v-model=\"form.tableName\" \n                      placeholder=\"Enter target table name\"\n                    >\n                      <template #prefix>\n                        <el-icon><Grid /></el-icon>\n                      </template>\n                    </el-input>\n                  </el-form-item>\n\n                  <el-form-item label=\"Preview\" v-if=\"form.file\">\n                    <el-button type=\"primary\" @click=\"previewFile\" :loading=\"previewLoading\">\n                      <el-icon><View /></el-icon>\n                      Preview Data\n                    </el-button>\n                  </el-form-item>\n\n                  <el-form-item label=\"Columns\" v-if=\"previewHeaders.length > 0\">\n                    <el-card class=\"columns-card\">\n                      <template #header>\n                        <div class=\"columns-header\">\n                          <span>Available Columns</span>\n                          <el-button-group>\n                            <el-button @click=\"selectAllColumns(true)\" size=\"small\">\n                              Select All\n                            </el-button>\n                            <el-button @click=\"selectAllColumns(false)\" size=\"small\">\n                              Deselect All\n                            </el-button>\n                          </el-button-group>\n                        </div>\n                      </template>\n                      <el-checkbox-group v-model=\"form.selectedColumns\">\n                        <el-row :gutter=\"20\">\n                          <el-col :span=\"8\" v-for=\"header in previewHeaders\" :key=\"header\">\n                            <el-checkbox :label=\"header\">\n                              {{ header }}\n                            </el-checkbox>\n                          </el-col>\n                        </el-row>\n                      </el-checkbox-group>\n                    </el-card>\n                  </el-form-item>\n                </template>\n\n                <!-- Action Buttons Section -->\n                <el-divider content-position=\"center\">\n                  <el-tag type=\"primary\" size=\"large\">Actions</el-tag>\n                </el-divider>\n\n                <el-form-item class=\"submit-button\">\n                  <el-button \n                    type=\"primary\" \n                    @click=\"handleSubmit\"\n                    :loading=\"loading\"\n                    size=\"large\"\n                    :disabled=\"form.sourceType === 'clickhouse' && !isConnectionValid\"\n                  >\n                    <el-icon><Upload /></el-icon>\n                    Start Ingestion\n                  </el-button>\n                </el-form-item>\n\n                <!-- Progress Dialog -->\n                <el-dialog\n                  v-model=\"showProgressDialog\"\n                  title=\"Transfer Progress\"\n                  width=\"50%\"\n                  center\n                  :close-on-click-modal=\"false\"\n                  :close-on-press-escape=\"false\"\n                  :show-close=\"false\"\n                >\n                  <el-progress\n                    :percentage=\"transferProgress\"\n                    :status=\"transferStatus\"\n                    :stroke-width=\"20\"\n                  />\n                  <div class=\"progress-details\">\n                    <p>Records Processed: {{ processedRecords }}</p>\n                    <p>Status: {{ transferStatusText }}</p>\n                    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\n                  </div>\n                  <template #footer>\n                    <span class=\"dialog-footer\">\n                      <el-button \n                        type=\"primary\" \n                        @click=\"showProgressDialog = false\"\n                        :disabled=\"!transferComplete\"\n                      >\n                        Close\n                      </el-button>\n                    </span>\n                  </template>\n                </el-dialog>\n              </el-form>\n            </el-card>\n          </el-col>\n        </el-row>\n\n        <!-- Success Dialog -->\n        <el-dialog\n          v-model=\"showSuccessDialog\"\n          title=\"Transfer Successful\"\n          width=\"30%\"\n          center\n        >\n          <div class=\"success-details\">\n            <el-icon class=\"success-icon\"><CircleCheck /></el-icon>\n            <p>Your data transfer has been completed successfully!</p>\n            <p class=\"record-count\">Total Records Processed: {{ processedRecords }}</p>\n          </div>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button type=\"primary\" @click=\"showSuccessDialog = false\">\n                Close\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\nimport { \n  DataLine, \n  Document, \n  Upload, \n  UploadFilled,\n  Grid,\n  Connection,\n  Port,\n  DataBase,\n  User,\n  Key,\n  Separator,\n  Quote,\n  View,\n  Refresh,\n  CircleCheck\n} from '@element-plus/icons-vue'\n\nexport default {\n  name: 'App',\n  components: {\n    DataLine,\n    Document,\n    Upload,\n    UploadFilled,\n    Grid,\n    Connection,\n    Port,\n    DataBase,\n    User,\n    Key,\n    Separator,\n    Quote,\n    View,\n    Refresh,\n    CircleCheck\n  },\n  setup() {\n    const form = ref({\n      sourceType: 'clickhouse',\n      connectionType: 'http',\n      host: '',\n      port: '',\n      database: '',\n      user: '',\n      jwtToken: '',\n      query: '',\n      tableName: '',\n      file: null,\n      fileFormat: 'csv',\n      delimiter: ',',\n      quoteChar: '\"',\n      hasHeader: true,\n      selectedTable: '',\n      selectedColumns: []\n    })\n\n    const activeStep = ref(0)\n    const loading = ref(false)\n    const testingConnection = ref(false)\n    const showSuccessDialog = ref(false)\n    const showPreviewDialog = ref(false)\n    const previewLoading = ref(false)\n    const previewData = ref([])\n    const previewHeaders = ref([])\n    const tables = ref([])\n    const columns = ref([])\n    const loadingTables = ref(false)\n\n    const showProgressDialog = ref(false)\n    const transferProgress = ref(0)\n    const transferStatus = ref('')\n    const transferStatusText = ref('')\n    const processedRecords = ref(0)\n    const errorMessage = ref('')\n    const transferComplete = ref(false)\n\n    const isConnectionValid = computed(() => {\n      return form.value.host && \n             form.value.port && \n             form.value.database && \n             form.value.user\n    })\n\n    const getFileAcceptType = computed(() => {\n      switch (form.value.fileFormat) {\n        case 'csv':\n          return '.csv'\n        case 'tsv':\n          return '.tsv'\n        case 'json':\n          return '.json'\n        default:\n          return '*'\n      }\n    })\n\n    const getFileTypeDescription = computed(() => {\n      switch (form.value.fileFormat) {\n        case 'csv':\n          return 'CSV files up to 10MB'\n        case 'tsv':\n          return 'TSV files up to 10MB'\n        case 'json':\n          return 'JSON files up to 10MB'\n        default:\n          return 'Files up to 10MB'\n      }\n    })\n\n    const handleSourceChange = () => {\n      activeStep.value = 1\n    }\n\n    const handleFileChange = (file) => {\n      form.value.file = file.raw\n      activeStep.value = 1\n    }\n\n    const testConnection = async () => {\n      testingConnection.value = true\n      try {\n        const { data } = await axios.post('/api/data-flow/test-connection', {\n          connectionType: form.value.connectionType,\n          host: form.value.host,\n          port: form.value.port,\n          database: form.value.database,\n          user: form.value.user,\n          jwtToken: form.value.jwtToken\n        })\n        ElMessage.success(data.message || 'Connection successful!')\n      } catch (error) {\n        ElMessage.error(error.response?.data?.message || 'Connection failed')\n      } finally {\n        testingConnection.value = false\n      }\n    }\n\n    const fetchTables = async () => {\n      loadingTables.value = true\n      try {\n        const { data } = await axios.post('/api/data-flow/tables', {\n          connectionType: form.value.connectionType,\n          host: form.value.host,\n          port: form.value.port,\n          database: form.value.database,\n          user: form.value.user,\n          jwtToken: form.value.jwtToken\n        })\n        tables.value = data.tables\n      } catch (error) {\n        ElMessage.error(error.response?.data?.message || 'Failed to fetch tables')\n      } finally {\n        loadingTables.value = false\n      }\n    }\n\n    const handleTableSelect = async (tableName) => {\n      if (!tableName) return\n      \n      try {\n        const { data } = await axios.post('/api/data-flow/columns', {\n          connectionType: form.value.connectionType,\n          host: form.value.host,\n          port: form.value.port,\n          database: form.value.database,\n          user: form.value.user,\n          jwtToken: form.value.jwtToken,\n          table: tableName\n        })\n        columns.value = data.columns\n        form.value.selectedColumns = columns.value.map(col => col.name)\n      } catch (error) {\n        ElMessage.error(error.response?.data?.message || 'Failed to fetch columns')\n      }\n    }\n\n    const selectAllColumns = (select) => {\n      if (form.value.sourceType === 'clickhouse') {\n        form.value.selectedColumns = select ? columns.value.map(col => col.name) : []\n      } else {\n        form.value.selectedColumns = select ? previewHeaders.value : []\n      }\n    }\n\n    const previewFile = async () => {\n      previewLoading.value = true\n      try {\n        const formData = new FormData()\n        formData.append('file', form.value.file)\n        formData.append('format', form.value.fileFormat)\n        formData.append('delimiter', form.value.delimiter)\n        formData.append('quoteChar', form.value.quoteChar)\n        formData.append('hasHeader', form.value.hasHeader)\n\n        const { data } = await axios.post('/api/data-flow/preview-file', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        \n        previewData.value = data.rows\n        previewHeaders.value = data.headers\n        form.value.selectedColumns = data.headers\n        showPreviewDialog.value = true\n      } catch (error) {\n        ElMessage.error(error.response?.data?.message || 'Failed to preview file')\n      } finally {\n        previewLoading.value = false\n      }\n    }\n\n    const handleSubmit = async () => {\n      loading.value = true\n      showProgressDialog.value = true\n      transferProgress.value = 0\n      transferStatus.value = ''\n      transferStatusText.value = 'Initializing transfer...'\n      processedRecords.value = 0\n      errorMessage.value = ''\n      transferComplete.value = false\n\n      try {\n        if (form.value.sourceType === 'clickhouse') {\n          const response = await axios.post('/api/data-flow/clickhouse-to-file', {\n            connectionType: form.value.connectionType,\n            host: form.value.host,\n            port: form.value.port,\n            database: form.value.database,\n            user: form.value.user,\n            jwtToken: form.value.jwtToken,\n            query: form.value.query,\n            selectedColumns: form.value.selectedColumns\n          }, {\n            onUploadProgress: (progressEvent) => {\n              const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n              transferProgress.value = progress\n              transferStatusText.value = `Transferring data... (${progress}%)`\n            }\n          })\n          \n          processedRecords.value = response.data.recordsProcessed\n          transferProgress.value = 100\n          transferStatus.value = 'success'\n          transferStatusText.value = 'Transfer completed successfully'\n          transferComplete.value = true\n          showSuccessDialog.value = true\n        } else {\n          const formData = new FormData()\n          formData.append('file', form.value.file)\n          formData.append('tableName', form.value.tableName)\n          formData.append('format', form.value.fileFormat)\n          formData.append('delimiter', form.value.delimiter)\n          formData.append('quoteChar', form.value.quoteChar)\n          formData.append('hasHeader', form.value.hasHeader)\n          formData.append('selectedColumns', JSON.stringify(form.value.selectedColumns))\n          \n          const response = await axios.post('/api/data-flow/file-to-clickhouse', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            },\n            onUploadProgress: (progressEvent) => {\n              const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n              transferProgress.value = progress\n              transferStatusText.value = `Uploading file... (${progress}%)`\n            }\n          })\n\n          processedRecords.value = response.data.recordsProcessed\n          transferProgress.value = 100\n          transferStatus.value = 'success'\n          transferStatusText.value = 'Transfer completed successfully'\n          transferComplete.value = true\n          showSuccessDialog.value = true\n        }\n      } catch (error) {\n        transferProgress.value = 100\n        transferStatus.value = 'exception'\n        transferComplete.value = true\n        \n        if (error.response) {\n          switch (error.response.status) {\n            case 401:\n              errorMessage.value = 'Authentication failed. Please check your credentials.'\n              break\n            case 403:\n              errorMessage.value = 'Access denied. Please check your permissions.'\n              break\n            case 404:\n              errorMessage.value = 'Resource not found. Please check your configuration.'\n              break\n            case 500:\n              errorMessage.value = 'Server error. Please try again later.'\n              break\n            default:\n              errorMessage.value = error.response.data?.message || 'An error occurred during transfer'\n          }\n        } else if (error.request) {\n          errorMessage.value = 'Network error. Please check your connection.'\n        } else {\n          errorMessage.value = error.message || 'An unexpected error occurred'\n        }\n        \n        transferStatusText.value = 'Transfer failed'\n        ElMessage.error(errorMessage.value)\n      } finally {\n        loading.value = false\n      }\n    }\n\n    return {\n      form,\n      activeStep,\n      loading,\n      testingConnection,\n      showSuccessDialog,\n      showPreviewDialog,\n      previewLoading,\n      previewData,\n      previewHeaders,\n      isConnectionValid,\n      getFileAcceptType,\n      getFileTypeDescription,\n      handleSourceChange,\n      handleFileChange,\n      testConnection,\n      previewFile,\n      handleSubmit,\n      tables,\n      columns,\n      loadingTables,\n      fetchTables,\n      handleTableSelect,\n      selectAllColumns,\n      showProgressDialog,\n      transferProgress,\n      transferStatus,\n      transferStatusText,\n      processedRecords,\n      errorMessage,\n      transferComplete\n    }\n  }\n}\n</script>\n\n<style>\n.app-container {\n  min-height: 100vh;\n  background-color: #f5f7fa;\n  position: relative;\n  overflow: hidden;\n}\n\n.app-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: \n    linear-gradient(45deg, rgba(64, 158, 255, 0.1) 25%, transparent 25%, transparent 75%, rgba(64, 158, 255, 0.1) 75%),\n    linear-gradient(45deg, rgba(64, 158, 255, 0.1) 25%, transparent 25%, transparent 75%, rgba(64, 158, 255, 0.1) 75%);\n  background-size: 60px 60px;\n  background-position: 0 0, 30px 30px;\n  animation: backgroundMove 20s linear infinite;\n  z-index: 0;\n}\n\n@keyframes backgroundMove {\n  0% {\n    background-position: 0 0, 30px 30px;\n  }\n  100% {\n    background-position: 60px 60px, 90px 90px;\n  }\n}\n\n.app-container::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: radial-gradient(circle at center, transparent 0%, rgba(255, 255, 255, 0.8) 100%);\n  z-index: 1;\n}\n\n.el-container {\n  position: relative;\n  z-index: 2;\n}\n\n.header {\n  background: linear-gradient(135deg, #409EFF 0%, #36D1DC 100%);\n  color: white;\n  padding: 20px 0;\n  text-align: center;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  position: relative;\n  overflow: hidden;\n}\n\n.header::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: \n    linear-gradient(45deg, rgba(255,255,255,0.1) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.1) 50%, rgba(255,255,255,0.1) 75%, transparent 75%, transparent),\n    linear-gradient(45deg, rgba(255,255,255,0.1) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.1) 50%, rgba(255,255,255,0.1) 75%, transparent 75%, transparent);\n  background-size: 20px 20px;\n  background-position: 0 0, 10px 10px;\n  animation: move 2s linear infinite;\n}\n\n@keyframes move {\n  0% { background-position: 0 0, 10px 10px; }\n  100% { background-position: 20px 20px, 30px 30px; }\n}\n\n.header-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  position: relative;\n  z-index: 1;\n}\n\n.header h1 {\n  margin: 0;\n  font-size: 2.5em;\n  font-weight: 600;\n  text-shadow: 2px 2px 4px rgba(0,0,0,0.2);\n  animation: fadeInDown 1s ease-out;\n}\n\n.subtitle {\n  margin: 10px 0 0;\n  font-size: 1.1em;\n  opacity: 0.9;\n  animation: fadeInUp 1s ease-out 0.3s both;\n}\n\n@keyframes fadeInDown {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 0.9;\n    transform: translateY(0);\n  }\n}\n\n.main-content {\n  max-width: 1200px;\n  margin: 40px auto;\n  padding: 0 20px;\n  animation: fadeIn 1s ease-out;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.data-flow-card {\n  border-radius: 8px;\n  transition: all 0.3s;\n  box-shadow: 0 4px 20px rgba(0,0,0,0.1);\n  background: white;\n  overflow: hidden;\n}\n\n.data-flow-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  background: linear-gradient(to right, #f8f9fa, #ffffff);\n  border-bottom: 1px solid #ebeef5;\n}\n\n.header-title {\n  font-size: 1.2em;\n  font-weight: 600;\n  color: #303133;\n}\n\n.steps {\n  margin: 30px 0;\n  padding: 0 20px;\n}\n\n.el-step__title {\n  font-weight: 600;\n  transition: all 0.3s;\n}\n\n.el-step__title:hover {\n  color: #409EFF;\n  transform: scale(1.05);\n}\n\n.data-form {\n  margin-top: 20px;\n  padding: 20px;\n}\n\n.source-type, .connection-type {\n  margin-bottom: 30px;\n  transition: all 0.3s;\n}\n\n.el-radio-button__inner {\n  transition: all 0.3s;\n}\n\n.el-radio-button__inner:hover {\n  transform: scale(1.05);\n}\n\n.query-input {\n  margin-bottom: 20px;\n}\n\n.query-tips {\n  margin-top: 10px;\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0% { opacity: 1; }\n  50% { opacity: 0.7; }\n  100% { opacity: 1; }\n}\n\n.file-format {\n  margin-bottom: 20px;\n}\n\n.header-row {\n  margin-bottom: 20px;\n}\n\n.file-upload {\n  margin-bottom: 20px;\n}\n\n.upload-demo {\n  width: 100%;\n  transition: all 0.3s;\n}\n\n.upload-demo:hover {\n  transform: scale(1.02);\n}\n\n.table-name {\n  margin-bottom: 30px;\n}\n\n.submit-button {\n  text-align: center;\n  margin-top: 40px;\n}\n\n.el-button {\n  padding: 12px 24px;\n  transition: all 0.3s;\n  position: relative;\n  overflow: hidden;\n}\n\n.el-button::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 5px;\n  height: 5px;\n  background: rgba(255,255,255,0.5);\n  opacity: 0;\n  border-radius: 100%;\n  transform: scale(1, 1) translate(-50%);\n  transform-origin: 50% 50%;\n}\n\n.el-button:focus:not(:active)::after {\n  animation: ripple 1s ease-out;\n}\n\n@keyframes ripple {\n  0% {\n    transform: scale(0, 0);\n    opacity: 0.5;\n  }\n  100% {\n    transform: scale(20, 20);\n    opacity: 0;\n  }\n}\n\n.el-icon {\n  margin-right: 5px;\n  transition: transform 0.3s;\n}\n\n.el-button:hover .el-icon {\n  transform: scale(1.2);\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: center;\n}\n\n.el-row {\n  margin-bottom: 20px;\n}\n\n.preview-table {\n  margin-top: 20px;\n}\n\n.tables-list {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.refresh-tables {\n  margin-left: 10px;\n}\n\n.columns-card {\n  margin-top: 10px;\n  transition: all 0.3s;\n}\n\n.columns-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n}\n\n.columns-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.column-type {\n  margin-left: 5px;\n  transition: all 0.3s;\n}\n\n.column-type:hover {\n  transform: scale(1.1);\n}\n\n.el-checkbox {\n  margin-bottom: 10px;\n  transition: all 0.3s;\n}\n\n.el-checkbox:hover {\n  transform: translateX(5px);\n}\n\n.progress-details {\n  margin-top: 20px;\n  text-align: center;\n  animation: fadeIn 0.5s ease-out;\n}\n\n.error-message {\n  color: #F56C6C;\n  margin-top: 10px;\n  animation: shake 0.5s;\n}\n\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-5px); }\n  75% { transform: translateX(5px); }\n}\n\n.success-details {\n  text-align: center;\n  animation: zoomIn 0.5s ease-out;\n}\n\n@keyframes zoomIn {\n  from {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.success-icon {\n  font-size: 48px;\n  color: #67C23A;\n  margin-bottom: 20px;\n  animation: bounce 1s infinite;\n}\n\n@keyframes bounce {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-10px); }\n}\n\n.record-count {\n  font-weight: bold;\n  margin-top: 10px;\n  color: #409EFF;\n  animation: pulse 2s infinite;\n}\n\n/* Add smooth transitions for form elements */\n.el-input, .el-select, .el-textarea {\n  transition: all 0.3s;\n}\n\n.el-input:hover, .el-select:hover, .el-textarea:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n/* Add loading animation */\n.el-loading-spinner {\n  animation: rotate 2s linear infinite;\n}\n\n@keyframes rotate {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* Add hover effects for cards */\n.el-card {\n  transition: all 0.3s;\n}\n\n.el-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n}\n\n/* Add animation for progress bar */\n.el-progress-bar__inner {\n  transition: width 0.6s ease;\n}\n\n/* Add animation for dialogs */\n.el-dialog {\n  animation: dialogFadeIn 0.3s ease-out;\n}\n\n@keyframes dialogFadeIn {\n  from {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}