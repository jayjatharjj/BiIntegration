{"ast":null,"code":"import _regeneratorRuntime from \"/home/jayjathar/BiIntegration/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/jayjathar/BiIntegration/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref, computed } from 'vue';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport { DataLine, Document, Upload, UploadFilled, Grid, Connection, Port, DataBase, User, Key, Separator, Quote, View } from '@element-plus/icons-vue';\nexport default {\n  name: 'App',\n  components: {\n    DataLine: DataLine,\n    Document: Document,\n    Upload: Upload,\n    UploadFilled: UploadFilled,\n    Grid: Grid,\n    Connection: Connection,\n    Port: Port,\n    DataBase: DataBase,\n    User: User,\n    Key: Key,\n    Separator: Separator,\n    Quote: Quote,\n    View: View\n  },\n  setup: function setup() {\n    var form = ref({\n      sourceType: 'clickhouse',\n      connectionType: 'http',\n      host: '',\n      port: '',\n      database: '',\n      user: '',\n      jwtToken: '',\n      query: '',\n      tableName: '',\n      file: null,\n      fileFormat: 'csv',\n      delimiter: ',',\n      quoteChar: '\"',\n      hasHeader: true\n    });\n    var activeStep = ref(0);\n    var loading = ref(false);\n    var testingConnection = ref(false);\n    var showSuccessDialog = ref(false);\n    var showPreviewDialog = ref(false);\n    var previewLoading = ref(false);\n    var previewData = ref([]);\n    var previewHeaders = ref([]);\n    var isConnectionValid = computed(function () {\n      return form.value.host && form.value.port && form.value.database && form.value.user;\n    });\n    var getFileAcceptType = computed(function () {\n      switch (form.value.fileFormat) {\n        case 'csv':\n          return '.csv';\n        case 'tsv':\n          return '.tsv';\n        case 'json':\n          return '.json';\n        default:\n          return '*';\n      }\n    });\n    var getFileTypeDescription = computed(function () {\n      switch (form.value.fileFormat) {\n        case 'csv':\n          return 'CSV files up to 10MB';\n        case 'tsv':\n          return 'TSV files up to 10MB';\n        case 'json':\n          return 'JSON files up to 10MB';\n        default:\n          return 'Files up to 10MB';\n      }\n    });\n    var handleSourceChange = function handleSourceChange() {\n      activeStep.value = 1;\n    };\n    var handleFileChange = function handleFileChange(file) {\n      form.value.file = file.raw;\n      activeStep.value = 1;\n    };\n    var testConnection = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$axios$post, data, _error$response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              testingConnection.value = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.post('/api/data-flow/test-connection', {\n                connectionType: form.value.connectionType,\n                host: form.value.host,\n                port: form.value.port,\n                database: form.value.database,\n                user: form.value.user,\n                jwtToken: form.value.jwtToken\n              });\n            case 4:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              ElMessage.success(data.message || 'Connection successful!');\n              _context.next = 12;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              ElMessage.error(((_error$response = _context.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.message) || 'Connection failed');\n            case 12:\n              _context.prev = 12;\n              testingConnection.value = false;\n              return _context.finish(12);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 9, 12, 15]]);\n      }));\n      return function testConnection() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var previewFile = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var formData, _yield$axios$post2, data, _error$response2;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              previewLoading.value = true;\n              _context2.prev = 1;\n              formData = new FormData();\n              formData.append('file', form.value.file);\n              formData.append('format', form.value.fileFormat);\n              formData.append('delimiter', form.value.delimiter);\n              formData.append('quoteChar', form.value.quoteChar);\n              formData.append('hasHeader', form.value.hasHeader);\n              _context2.next = 10;\n              return axios.post('/api/data-flow/preview-file', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n            case 10:\n              _yield$axios$post2 = _context2.sent;\n              data = _yield$axios$post2.data;\n              previewData.value = data.rows;\n              previewHeaders.value = data.headers;\n              showPreviewDialog.value = true;\n              _context2.next = 20;\n              break;\n            case 17:\n              _context2.prev = 17;\n              _context2.t0 = _context2[\"catch\"](1);\n              ElMessage.error(((_error$response2 = _context2.t0.response) === null || _error$response2 === void 0 || (_error$response2 = _error$response2.data) === null || _error$response2 === void 0 ? void 0 : _error$response2.message) || 'Failed to preview file');\n            case 20:\n              _context2.prev = 20;\n              previewLoading.value = false;\n              return _context2.finish(20);\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 17, 20, 23]]);\n      }));\n      return function previewFile() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response, formData, _response, _error$response3;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              loading.value = true;\n              _context3.prev = 1;\n              if (!(form.value.sourceType === 'clickhouse')) {\n                _context3.next = 9;\n                break;\n              }\n              _context3.next = 5;\n              return axios.post('/api/data-flow/clickhouse-to-file', {\n                connectionType: form.value.connectionType,\n                host: form.value.host,\n                port: form.value.port,\n                database: form.value.database,\n                user: form.value.user,\n                jwtToken: form.value.jwtToken,\n                query: form.value.query\n              });\n            case 5:\n              response = _context3.sent;\n              ElMessage.success(response.data);\n              _context3.next = 20;\n              break;\n            case 9:\n              formData = new FormData();\n              formData.append('file', form.value.file);\n              formData.append('tableName', form.value.tableName);\n              formData.append('format', form.value.fileFormat);\n              formData.append('delimiter', form.value.delimiter);\n              formData.append('quoteChar', form.value.quoteChar);\n              formData.append('hasHeader', form.value.hasHeader);\n              _context3.next = 18;\n              return axios.post('/api/data-flow/file-to-clickhouse', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n            case 18:\n              _response = _context3.sent;\n              ElMessage.success(_response.data);\n            case 20:\n              activeStep.value = 2;\n              showSuccessDialog.value = true;\n              _context3.next = 27;\n              break;\n            case 24:\n              _context3.prev = 24;\n              _context3.t0 = _context3[\"catch\"](1);\n              ElMessage.error(((_error$response3 = _context3.t0.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'An error occurred');\n            case 27:\n              _context3.prev = 27;\n              loading.value = false;\n              return _context3.finish(27);\n            case 30:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 24, 27, 30]]);\n      }));\n      return function handleSubmit() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    return {\n      form: form,\n      activeStep: activeStep,\n      loading: loading,\n      testingConnection: testingConnection,\n      showSuccessDialog: showSuccessDialog,\n      showPreviewDialog: showPreviewDialog,\n      previewLoading: previewLoading,\n      previewData: previewData,\n      previewHeaders: previewHeaders,\n      isConnectionValid: isConnectionValid,\n      getFileAcceptType: getFileAcceptType,\n      getFileTypeDescription: getFileTypeDescription,\n      handleSourceChange: handleSourceChange,\n      handleFileChange: handleFileChange,\n      testConnection: testConnection,\n      previewFile: previewFile,\n      handleSubmit: handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","axios","ElMessage","DataLine","Document","Upload","UploadFilled","Grid","Connection","Port","DataBase","User","Key","Separator","Quote","View","name","components","setup","form","sourceType","connectionType","host","port","database","user","jwtToken","query","tableName","file","fileFormat","delimiter","quoteChar","hasHeader","activeStep","loading","testingConnection","showSuccessDialog","showPreviewDialog","previewLoading","previewData","previewHeaders","isConnectionValid","value","getFileAcceptType","getFileTypeDescription","handleSourceChange","handleFileChange","raw","testConnection","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$post","data","_error$response","wrap","_callee$","_context","prev","next","post","sent","success","message","t0","error","response","finish","stop","apply","arguments","previewFile","_ref2","_callee2","formData","_yield$axios$post2","_error$response2","_callee2$","_context2","FormData","append","headers","rows","handleSubmit","_ref3","_callee3","_response","_error$response3","_callee3$","_context3"],"sources":["/home/jayjathar/BiIntegration/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-container>\n      <el-header class=\"header\">\n        <div class=\"header-content\">\n          <h1>Data Integration Platform</h1>\n          <p class=\"subtitle\">Seamlessly transfer data between ClickHouse and Flat Files</p>\n        </div>\n      </el-header>\n      \n      <el-main class=\"main-content\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"24\">\n            <el-card class=\"data-flow-card\" shadow=\"hover\">\n              <template #header>\n                <div class=\"card-header\">\n                  <span class=\"header-title\">Data Flow Configuration</span>\n                  <el-tag type=\"info\" effect=\"dark\">v1.0</el-tag>\n                </div>\n              </template>\n              \n              <el-steps :active=\"activeStep\" finish-status=\"success\" class=\"steps\">\n                <el-step title=\"Select Source\" description=\"Choose your data source\"></el-step>\n                <el-step title=\"Configure\" description=\"Set up the transfer\"></el-step>\n                <el-step title=\"Execute\" description=\"Run the transfer\"></el-step>\n              </el-steps>\n\n              <el-form :model=\"form\" label-width=\"120px\" class=\"data-form\">\n                <el-form-item label=\"Source Type\" class=\"source-type\">\n                  <el-radio-group v-model=\"form.sourceType\" @change=\"handleSourceChange\">\n                    <el-radio-button label=\"clickhouse\">\n                      <el-icon><DataLine /></el-icon>\n                      ClickHouse\n                    </el-radio-button>\n                    <el-radio-button label=\"file\">\n                      <el-icon><Document /></el-icon>\n                      Flat File\n                    </el-radio-button>\n                  </el-radio-group>\n                </el-form-item>\n\n                <el-divider content-position=\"center\">\n                  <el-tag type=\"primary\">Configuration</el-tag>\n                </el-divider>\n\n                <template v-if=\"form.sourceType === 'clickhouse'\">\n                  <el-form-item label=\"Connection Type\" class=\"connection-type\">\n                    <el-radio-group v-model=\"form.connectionType\">\n                      <el-radio-button label=\"http\">HTTP</el-radio-button>\n                      <el-radio-button label=\"https\">HTTPS</el-radio-button>\n                    </el-radio-group>\n                  </el-form-item>\n\n                  <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                      <el-form-item label=\"Host\" required>\n                        <el-input v-model=\"form.host\" placeholder=\"e.g., localhost\">\n                          <template #prefix>\n                            <el-icon><Connection /></el-icon>\n                          </template>\n                        </el-input>\n                      </el-form-item>\n                    </el-col>\n                    <el-col :span=\"12\">\n                      <el-form-item label=\"Port\" required>\n                        <el-input v-model=\"form.port\" placeholder=\"e.g., 8123\">\n                          <template #prefix>\n                            <el-icon><Port /></el-icon>\n                          </template>\n                        </el-input>\n                      </el-form-item>\n                    </el-col>\n                  </el-row>\n\n                  <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                      <el-form-item label=\"Database\" required>\n                        <el-input v-model=\"form.database\" placeholder=\"e.g., default\">\n                          <template #prefix>\n                            <el-icon><DataBase /></el-icon>\n                          </template>\n                        </el-input>\n                      </el-form-item>\n                    </el-col>\n                    <el-col :span=\"12\">\n                      <el-form-item label=\"User\" required>\n                        <el-input v-model=\"form.user\" placeholder=\"e.g., default\">\n                          <template #prefix>\n                            <el-icon><User /></el-icon>\n                          </template>\n                        </el-input>\n                      </el-form-item>\n                    </el-col>\n                  </el-row>\n\n                  <el-form-item label=\"JWT Token\">\n                    <el-input\n                      v-model=\"form.jwtToken\"\n                      type=\"password\"\n                      placeholder=\"Enter JWT token if required\"\n                      show-password\n                    >\n                      <template #prefix>\n                        <el-icon><Key /></el-icon>\n                      </template>\n                    </el-input>\n                  </el-form-item>\n\n                  <el-divider content-position=\"center\">\n                    <el-tag type=\"primary\">Query Configuration</el-tag>\n                  </el-divider>\n\n                  <el-form-item label=\"Query\" class=\"query-input\">\n                    <el-input\n                      type=\"textarea\"\n                      v-model=\"form.query\"\n                      :rows=\"6\"\n                      placeholder=\"Enter your SQL query\"\n                      resize=\"none\"\n                    ></el-input>\n                    <div class=\"query-tips\">\n                      <el-tag size=\"small\" type=\"info\">Tip: Use SELECT * FROM table_name to export all data</el-tag>\n                    </div>\n                  </el-form-item>\n\n                  <el-form-item>\n                    <el-button type=\"primary\" @click=\"testConnection\" :loading=\"testingConnection\">\n                      <el-icon><Connection /></el-icon>\n                      Test Connection\n                    </el-button>\n                  </el-form-item>\n                </template>\n\n                <template v-else>\n                  <el-form-item label=\"File Format\" class=\"file-format\">\n                    <el-radio-group v-model=\"form.fileFormat\">\n                      <el-radio-button label=\"csv\">CSV</el-radio-button>\n                      <el-radio-button label=\"tsv\">TSV</el-radio-button>\n                      <el-radio-button label=\"json\">JSON</el-radio-button>\n                    </el-radio-group>\n                  </el-form-item>\n\n                  <template v-if=\"form.fileFormat !== 'json'\">\n                    <el-row :gutter=\"20\">\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"Delimiter\" required>\n                          <el-input v-model=\"form.delimiter\" placeholder=\"e.g., , or \\t\">\n                            <template #prefix>\n                              <el-icon><Separator /></el-icon>\n                            </template>\n                          </el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"Quote Character\">\n                          <el-input v-model=\"form.quoteChar\" placeholder=\"e.g., &quot;\">\n                            <template #prefix>\n                              <el-icon><Quote /></el-icon>\n                            </template>\n                          </el-input>\n                        </el-form-item>\n                      </el-col>\n                    </el-row>\n\n                    <el-form-item label=\"Has Header\" class=\"header-row\">\n                      <el-switch\n                        v-model=\"form.hasHeader\"\n                        active-text=\"Yes\"\n                        inactive-text=\"No\"\n                      />\n                    </el-form-item>\n                  </template>\n\n                  <el-form-item label=\"File\" class=\"file-upload\">\n                    <el-upload\n                      class=\"upload-demo\"\n                      drag\n                      action=\"#\"\n                      :auto-upload=\"false\"\n                      :on-change=\"handleFileChange\"\n                      :limit=\"1\"\n                      :accept=\"getFileAcceptType\"\n                    >\n                      <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n                      <div class=\"el-upload__text\">\n                        Drop file here or <em>click to upload</em>\n                      </div>\n                      <template #tip>\n                        <div class=\"el-upload__tip\">\n                          {{ getFileTypeDescription }}\n                        </div>\n                      </template>\n                    </el-upload>\n                  </el-form-item>\n\n                  <el-form-item label=\"Table Name\" class=\"table-name\">\n                    <el-input \n                      v-model=\"form.tableName\" \n                      placeholder=\"Enter target table name\"\n                    >\n                      <template #prefix>\n                        <el-icon><Grid /></el-icon>\n                      </template>\n                    </el-input>\n                  </el-form-item>\n\n                  <el-form-item label=\"Preview\" v-if=\"form.file\">\n                    <el-button type=\"primary\" @click=\"previewFile\" :loading=\"previewLoading\">\n                      <el-icon><View /></el-icon>\n                      Preview Data\n                    </el-button>\n                  </el-form-item>\n\n                  <el-dialog\n                    v-model=\"showPreviewDialog\"\n                    title=\"File Preview\"\n                    width=\"70%\"\n                    center\n                  >\n                    <el-table\n                      :data=\"previewData\"\n                      style=\"width: 100%\"\n                      height=\"400\"\n                      border\n                    >\n                      <el-table-column\n                        v-for=\"(header, index) in previewHeaders\"\n                        :key=\"index\"\n                        :prop=\"header\"\n                        :label=\"header\"\n                      />\n                    </el-table>\n                  </el-dialog>\n                </template>\n\n                <el-form-item class=\"submit-button\">\n                  <el-button \n                    type=\"primary\" \n                    @click=\"handleSubmit\"\n                    :loading=\"loading\"\n                    size=\"large\"\n                    :disabled=\"form.sourceType === 'clickhouse' && !isConnectionValid\"\n                  >\n                    <el-icon><Upload /></el-icon>\n                    Start Transfer\n                  </el-button>\n                </el-form-item>\n              </el-form>\n            </el-card>\n          </el-col>\n        </el-row>\n\n        <el-dialog\n          v-model=\"showSuccessDialog\"\n          title=\"Transfer Successful\"\n          width=\"30%\"\n          center\n        >\n          <span>Your data transfer has been completed successfully!</span>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button type=\"primary\" @click=\"showSuccessDialog = false\">\n                Close\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\nimport { \n  DataLine, \n  Document, \n  Upload, \n  UploadFilled,\n  Grid,\n  Connection,\n  Port,\n  DataBase,\n  User,\n  Key,\n  Separator,\n  Quote,\n  View\n} from '@element-plus/icons-vue'\n\nexport default {\n  name: 'App',\n  components: {\n    DataLine,\n    Document,\n    Upload,\n    UploadFilled,\n    Grid,\n    Connection,\n    Port,\n    DataBase,\n    User,\n    Key,\n    Separator,\n    Quote,\n    View\n  },\n  setup() {\n    const form = ref({\n      sourceType: 'clickhouse',\n      connectionType: 'http',\n      host: '',\n      port: '',\n      database: '',\n      user: '',\n      jwtToken: '',\n      query: '',\n      tableName: '',\n      file: null,\n      fileFormat: 'csv',\n      delimiter: ',',\n      quoteChar: '\"',\n      hasHeader: true\n    })\n\n    const activeStep = ref(0)\n    const loading = ref(false)\n    const testingConnection = ref(false)\n    const showSuccessDialog = ref(false)\n    const showPreviewDialog = ref(false)\n    const previewLoading = ref(false)\n    const previewData = ref([])\n    const previewHeaders = ref([])\n\n    const isConnectionValid = computed(() => {\n      return form.value.host && \n             form.value.port && \n             form.value.database && \n             form.value.user\n    })\n\n    const getFileAcceptType = computed(() => {\n      switch (form.value.fileFormat) {\n        case 'csv':\n          return '.csv'\n        case 'tsv':\n          return '.tsv'\n        case 'json':\n          return '.json'\n        default:\n          return '*'\n      }\n    })\n\n    const getFileTypeDescription = computed(() => {\n      switch (form.value.fileFormat) {\n        case 'csv':\n          return 'CSV files up to 10MB'\n        case 'tsv':\n          return 'TSV files up to 10MB'\n        case 'json':\n          return 'JSON files up to 10MB'\n        default:\n          return 'Files up to 10MB'\n      }\n    })\n\n    const handleSourceChange = () => {\n      activeStep.value = 1\n    }\n\n    const handleFileChange = (file) => {\n      form.value.file = file.raw\n      activeStep.value = 1\n    }\n\n    const testConnection = async () => {\n      testingConnection.value = true\n      try {\n        const { data } = await axios.post('/api/data-flow/test-connection', {\n          connectionType: form.value.connectionType,\n          host: form.value.host,\n          port: form.value.port,\n          database: form.value.database,\n          user: form.value.user,\n          jwtToken: form.value.jwtToken\n        })\n        ElMessage.success(data.message || 'Connection successful!')\n      } catch (error) {\n        ElMessage.error(error.response?.data?.message || 'Connection failed')\n      } finally {\n        testingConnection.value = false\n      }\n    }\n\n    const previewFile = async () => {\n      previewLoading.value = true\n      try {\n        const formData = new FormData()\n        formData.append('file', form.value.file)\n        formData.append('format', form.value.fileFormat)\n        formData.append('delimiter', form.value.delimiter)\n        formData.append('quoteChar', form.value.quoteChar)\n        formData.append('hasHeader', form.value.hasHeader)\n\n        const { data } = await axios.post('/api/data-flow/preview-file', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        \n        previewData.value = data.rows\n        previewHeaders.value = data.headers\n        showPreviewDialog.value = true\n      } catch (error) {\n        ElMessage.error(error.response?.data?.message || 'Failed to preview file')\n      } finally {\n        previewLoading.value = false\n      }\n    }\n\n    const handleSubmit = async () => {\n      loading.value = true\n      try {\n        if (form.value.sourceType === 'clickhouse') {\n          const response = await axios.post('/api/data-flow/clickhouse-to-file', {\n            connectionType: form.value.connectionType,\n            host: form.value.host,\n            port: form.value.port,\n            database: form.value.database,\n            user: form.value.user,\n            jwtToken: form.value.jwtToken,\n            query: form.value.query\n          })\n          ElMessage.success(response.data)\n        } else {\n          const formData = new FormData()\n          formData.append('file', form.value.file)\n          formData.append('tableName', form.value.tableName)\n          formData.append('format', form.value.fileFormat)\n          formData.append('delimiter', form.value.delimiter)\n          formData.append('quoteChar', form.value.quoteChar)\n          formData.append('hasHeader', form.value.hasHeader)\n          \n          const response = await axios.post('/api/data-flow/file-to-clickhouse', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          })\n          ElMessage.success(response.data)\n        }\n        activeStep.value = 2\n        showSuccessDialog.value = true\n      } catch (error) {\n        ElMessage.error(error.response?.data || 'An error occurred')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    return {\n      form,\n      activeStep,\n      loading,\n      testingConnection,\n      showSuccessDialog,\n      showPreviewDialog,\n      previewLoading,\n      previewData,\n      previewHeaders,\n      isConnectionValid,\n      getFileAcceptType,\n      getFileTypeDescription,\n      handleSourceChange,\n      handleFileChange,\n      testConnection,\n      previewFile,\n      handleSubmit\n    }\n  }\n}\n</script>\n\n<style>\n.app-container {\n  min-height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.header {\n  background: linear-gradient(135deg, #409EFF 0%, #36D1DC 100%);\n  color: white;\n  padding: 20px 0;\n  text-align: center;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.header-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.header h1 {\n  margin: 0;\n  font-size: 2.5em;\n  font-weight: 600;\n}\n\n.subtitle {\n  margin: 10px 0 0;\n  font-size: 1.1em;\n  opacity: 0.9;\n}\n\n.main-content {\n  max-width: 1200px;\n  margin: 40px auto;\n  padding: 0 20px;\n}\n\n.data-flow-card {\n  border-radius: 8px;\n  transition: all 0.3s;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-title {\n  font-size: 1.2em;\n  font-weight: 600;\n}\n\n.steps {\n  margin: 30px 0;\n}\n\n.data-form {\n  margin-top: 20px;\n}\n\n.source-type, .connection-type {\n  margin-bottom: 30px;\n}\n\n.query-input {\n  margin-bottom: 20px;\n}\n\n.query-tips {\n  margin-top: 10px;\n}\n\n.file-format {\n  margin-bottom: 20px;\n}\n\n.header-row {\n  margin-bottom: 20px;\n}\n\n.file-upload {\n  margin-bottom: 20px;\n}\n\n.upload-demo {\n  width: 100%;\n}\n\n.table-name {\n  margin-bottom: 30px;\n}\n\n.submit-button {\n  text-align: center;\n  margin-top: 40px;\n}\n\n.el-button {\n  padding: 12px 24px;\n}\n\n.el-icon {\n  margin-right: 5px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: center;\n}\n\n.el-row {\n  margin-bottom: 20px;\n}\n\n.preview-table {\n  margin-top: 20px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}