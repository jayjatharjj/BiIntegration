{"ast":null,"code":"import _regeneratorRuntime from \"/home/jayjathar/BiIntegration/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/jayjathar/BiIntegration/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport { DataLine, Document, Upload, UploadFilled, Grid } from '@element-plus/icons-vue';\nexport default {\n  name: 'App',\n  components: {\n    DataLine: DataLine,\n    Document: Document,\n    Upload: Upload,\n    UploadFilled: UploadFilled,\n    Grid: Grid\n  },\n  setup: function setup() {\n    var form = ref({\n      sourceType: 'clickhouse',\n      query: '',\n      tableName: '',\n      file: null\n    });\n    var activeStep = ref(0);\n    var loading = ref(false);\n    var showSuccessDialog = ref(false);\n    var handleSourceChange = function handleSourceChange() {\n      activeStep.value = 1;\n    };\n    var handleFileChange = function handleFileChange(file) {\n      form.value.file = file.raw;\n      activeStep.value = 1;\n    };\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, formData, _response, _error$response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              _context.prev = 1;\n              if (!(form.value.sourceType === 'clickhouse')) {\n                _context.next = 9;\n                break;\n              }\n              _context.next = 5;\n              return axios.post('/api/data-flow/clickhouse-to-file', {\n                query: form.value.query\n              });\n            case 5:\n              response = _context.sent;\n              ElMessage.success(response.data);\n              _context.next = 16;\n              break;\n            case 9:\n              formData = new FormData();\n              formData.append('file', form.value.file);\n              formData.append('tableName', form.value.tableName);\n              _context.next = 14;\n              return axios.post('/api/data-flow/file-to-clickhouse', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n            case 14:\n              _response = _context.sent;\n              ElMessage.success(_response.data);\n            case 16:\n              activeStep.value = 2;\n              showSuccessDialog.value = true;\n              _context.next = 23;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](1);\n              ElMessage.error(((_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'An error occurred');\n            case 23:\n              _context.prev = 23;\n              loading.value = false;\n              return _context.finish(23);\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 20, 23, 26]]);\n      }));\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      form: form,\n      activeStep: activeStep,\n      loading: loading,\n      showSuccessDialog: showSuccessDialog,\n      handleSourceChange: handleSourceChange,\n      handleFileChange: handleFileChange,\n      handleSubmit: handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","ElMessage","DataLine","Document","Upload","UploadFilled","Grid","name","components","setup","form","sourceType","query","tableName","file","activeStep","loading","showSuccessDialog","handleSourceChange","value","handleFileChange","raw","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","formData","_response","_error$response","wrap","_callee$","_context","prev","next","post","sent","success","data","FormData","append","headers","t0","error","finish","stop","apply","arguments"],"sources":["/home/jayjathar/BiIntegration/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-container>\n      <el-header class=\"header\">\n        <div class=\"header-content\">\n          <h1>Data Integration Platform</h1>\n          <p class=\"subtitle\">Seamlessly transfer data between ClickHouse and Flat Files</p>\n        </div>\n      </el-header>\n      \n      <el-main class=\"main-content\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"24\">\n            <el-card class=\"data-flow-card\" shadow=\"hover\">\n              <template #header>\n                <div class=\"card-header\">\n                  <span class=\"header-title\">Data Flow Configuration</span>\n                  <el-tag type=\"info\" effect=\"dark\">v1.0</el-tag>\n                </div>\n              </template>\n              \n              <el-steps :active=\"activeStep\" finish-status=\"success\" class=\"steps\">\n                <el-step title=\"Select Source\" description=\"Choose your data source\"></el-step>\n                <el-step title=\"Configure\" description=\"Set up the transfer\"></el-step>\n                <el-step title=\"Execute\" description=\"Run the transfer\"></el-step>\n              </el-steps>\n\n              <el-form :model=\"form\" label-width=\"120px\" class=\"data-form\">\n                <el-form-item label=\"Source Type\" class=\"source-type\">\n                  <el-radio-group v-model=\"form.sourceType\" @change=\"handleSourceChange\">\n                    <el-radio-button label=\"clickhouse\">\n                      <el-icon><DataLine /></el-icon>\n                      ClickHouse\n                    </el-radio-button>\n                    <el-radio-button label=\"file\">\n                      <el-icon><Document /></el-icon>\n                      Flat File\n                    </el-radio-button>\n                  </el-radio-group>\n                </el-form-item>\n\n                <el-divider content-position=\"center\">\n                  <el-tag type=\"primary\">Configuration</el-tag>\n                </el-divider>\n\n                <template v-if=\"form.sourceType === 'clickhouse'\">\n                  <el-form-item label=\"Query\" class=\"query-input\">\n                    <el-input\n                      type=\"textarea\"\n                      v-model=\"form.query\"\n                      :rows=\"6\"\n                      placeholder=\"Enter your SQL query\"\n                      resize=\"none\"\n                    ></el-input>\n                    <div class=\"query-tips\">\n                      <el-tag size=\"small\" type=\"info\">Tip: Use SELECT * FROM table_name to export all data</el-tag>\n                    </div>\n                  </el-form-item>\n                </template>\n\n                <template v-else>\n                  <el-form-item label=\"File\" class=\"file-upload\">\n                    <el-upload\n                      class=\"upload-demo\"\n                      drag\n                      action=\"#\"\n                      :auto-upload=\"false\"\n                      :on-change=\"handleFileChange\"\n                      :limit=\"1\"\n                    >\n                      <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n                      <div class=\"el-upload__text\">\n                        Drop file here or <em>click to upload</em>\n                      </div>\n                      <template #tip>\n                        <div class=\"el-upload__tip\">\n                          CSV, TSV, or JSON files up to 10MB\n                        </div>\n                      </template>\n                    </el-upload>\n                  </el-form-item>\n                  <el-form-item label=\"Table Name\" class=\"table-name\">\n                    <el-input \n                      v-model=\"form.tableName\" \n                      placeholder=\"Enter target table name\"\n                    >\n                      <template #prefix>\n                        <el-icon><Grid /></el-icon>\n                      </template>\n                    </el-input>\n                  </el-form-item>\n                </template>\n\n                <el-form-item class=\"submit-button\">\n                  <el-button \n                    type=\"primary\" \n                    @click=\"handleSubmit\"\n                    :loading=\"loading\"\n                    size=\"large\"\n                  >\n                    <el-icon><Upload /></el-icon>\n                    Start Transfer\n                  </el-button>\n                </el-form-item>\n              </el-form>\n            </el-card>\n          </el-col>\n        </el-row>\n\n        <el-dialog\n          v-model=\"showSuccessDialog\"\n          title=\"Transfer Successful\"\n          width=\"30%\"\n          center\n        >\n          <span>Your data transfer has been completed successfully!</span>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button type=\"primary\" @click=\"showSuccessDialog = false\">\n                Close\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\nimport { \n  DataLine, \n  Document, \n  Upload, \n  UploadFilled,\n  Grid\n} from '@element-plus/icons-vue'\n\nexport default {\n  name: 'App',\n  components: {\n    DataLine,\n    Document,\n    Upload,\n    UploadFilled,\n    Grid\n  },\n  setup() {\n    const form = ref({\n      sourceType: 'clickhouse',\n      query: '',\n      tableName: '',\n      file: null\n    })\n\n    const activeStep = ref(0)\n    const loading = ref(false)\n    const showSuccessDialog = ref(false)\n\n    const handleSourceChange = () => {\n      activeStep.value = 1\n    }\n\n    const handleFileChange = (file) => {\n      form.value.file = file.raw\n      activeStep.value = 1\n    }\n\n    const handleSubmit = async () => {\n      loading.value = true\n      try {\n        if (form.value.sourceType === 'clickhouse') {\n          const response = await axios.post('/api/data-flow/clickhouse-to-file', {\n            query: form.value.query\n          })\n          ElMessage.success(response.data)\n        } else {\n          const formData = new FormData()\n          formData.append('file', form.value.file)\n          formData.append('tableName', form.value.tableName)\n          \n          const response = await axios.post('/api/data-flow/file-to-clickhouse', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          })\n          ElMessage.success(response.data)\n        }\n        activeStep.value = 2\n        showSuccessDialog.value = true\n      } catch (error) {\n        ElMessage.error(error.response?.data || 'An error occurred')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    return {\n      form,\n      activeStep,\n      loading,\n      showSuccessDialog,\n      handleSourceChange,\n      handleFileChange,\n      handleSubmit\n    }\n  }\n}\n</script>\n\n<style>\n.app-container {\n  min-height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.header {\n  background: linear-gradient(135deg, #409EFF 0%, #36D1DC 100%);\n  color: white;\n  padding: 20px 0;\n  text-align: center;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.header-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.header h1 {\n  margin: 0;\n  font-size: 2.5em;\n  font-weight: 600;\n}\n\n.subtitle {\n  margin: 10px 0 0;\n  font-size: 1.1em;\n  opacity: 0.9;\n}\n\n.main-content {\n  max-width: 1200px;\n  margin: 40px auto;\n  padding: 0 20px;\n}\n\n.data-flow-card {\n  border-radius: 8px;\n  transition: all 0.3s;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-title {\n  font-size: 1.2em;\n  font-weight: 600;\n}\n\n.steps {\n  margin: 30px 0;\n}\n\n.data-form {\n  margin-top: 20px;\n}\n\n.source-type {\n  margin-bottom: 30px;\n}\n\n.query-input {\n  margin-bottom: 20px;\n}\n\n.query-tips {\n  margin-top: 10px;\n}\n\n.file-upload {\n  margin-bottom: 20px;\n}\n\n.upload-demo {\n  width: 100%;\n}\n\n.table-name {\n  margin-bottom: 30px;\n}\n\n.submit-button {\n  text-align: center;\n  margin-top: 40px;\n}\n\n.el-button {\n  padding: 12px 24px;\n}\n\n.el-icon {\n  margin-right: 5px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: center;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}